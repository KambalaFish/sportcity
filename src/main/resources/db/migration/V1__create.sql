-- MySQL Script generated by MySQL Workbench
-- Чт 20 авг 2020 00:05:06
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema nsu20
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema nsu20
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `nsu20` ;
USE `nsu20` ;

-- -----------------------------------------------------
-- Table `nsu20`.`club`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `nsu20`.`club` (
                                              `id` INT NOT NULL AUTO_INCREMENT,
                                              `name` VARCHAR(100) NOT NULL,
                                              `amount_of_members` INT DEFAULT 0 NOT NULL,
                                              PRIMARY KEY (`id`),
                                              UNIQUE INDEX `name_UNIQUE` (`name` ASC) )
    ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `nsu20`.`sportsman`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `nsu20`.`sportsman` (
                                                   `id` INT NOT NULL AUTO_INCREMENT,
                                                   `name` VARCHAR(100) NOT NULL,
                                                   `club_id` INT NOT NULL,
                                                   PRIMARY KEY (`id`),
                                                   INDEX `fk_sportsman_club1_idx` (`club_id` ASC) ,
                                                   UNIQUE INDEX `name_UNIQUE` (`name` ASC) ,
                                                   CONSTRAINT `fk_sportsman_club1`
                                                       FOREIGN KEY (`club_id`)
                                                           REFERENCES `nsu20`.`club` (`id`)
                                                           ON DELETE CASCADE
                                                           ON UPDATE CASCADE)
    ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `nsu20`.`coach`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `nsu20`.`coach` (
                                               `id` INT NOT NULL AUTO_INCREMENT,
                                               `name` VARCHAR(100) NOT NULL,
                                               `sport` ENUM('football', 'tennis', 'hockey', 'volleyball', 'figureSkating', 'athletics') NOT NULL,
                                               PRIMARY KEY (`id`),
                                               UNIQUE INDEX `name_UNIQUE` (`name` ASC) )
    ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `nsu20`.`competition`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `nsu20`.`competition` (
                                                     `id` INT NOT NULL AUTO_INCREMENT,
                                                     `name` VARCHAR(100) NOT NULL,
                                                     `beginning_date` DATE NOT NULL,
                                                     `finish_date` DATE NOT NULL,
                                                     `sport` ENUM('football', 'tennis', 'hockey', 'volleyball', 'figureSkating', 'athletics') NOT NULL,
                                                     PRIMARY KEY (`id`),
                                                     UNIQUE KEY (`name`, `beginning_date`, `finish_date`)
)
    ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `nsu20`.`participation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `nsu20`.`participation` (
                                                       `sportsman_id` INT NOT NULL,
                                                       `competition_id` INT NOT NULL,
                                                       PRIMARY KEY (`sportsman_id`, `competition_id`),
                                                       INDEX `fk_participation_competition1_idx` (`competition_id` ASC) ,
                                                       CONSTRAINT `fk_participation_sportsman1`
                                                           FOREIGN KEY (`sportsman_id`)
                                                               REFERENCES `nsu20`.`sportsman` (`id`)
                                                               ON DELETE CASCADE
                                                               ON UPDATE CASCADE,
                                                       CONSTRAINT `fk_participation_competition1`
                                                           FOREIGN KEY (`competition_id`)
                                                               REFERENCES `nsu20`.`competition` (`id`)
                                                               ON DELETE CASCADE
                                                               ON UPDATE CASCADE)
    ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `nsu20`.`organizer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `nsu20`.`organizer` (
                                                   `id` INT NOT NULL AUTO_INCREMENT,
                                                   `name` VARCHAR(100) NOT NULL,
                                                   PRIMARY KEY (`id`),
                                                   UNIQUE INDEX `name_UNIQUE` (`name` ASC) )
    ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `nsu20`.`arrangement`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `nsu20`.`arrangement` (
                                                     `competition_id` INT NOT NULL,
                                                     `organizer_id` INT NOT NULL,
                                                     PRIMARY KEY (`competition_id`, `organizer_id`),
                                                     INDEX `fk_arrangement_organizer1_idx` (`organizer_id` ASC) ,
                                                     CONSTRAINT `fk_arrangement_competition1`
                                                         FOREIGN KEY (`competition_id`)
                                                             REFERENCES `nsu20`.`competition` (`id`)
                                                             ON DELETE CASCADE
                                                             ON UPDATE CASCADE,
                                                     CONSTRAINT `fk_arrangement_organizer1`
                                                         FOREIGN KEY (`organizer_id`)
                                                             REFERENCES `nsu20`.`organizer` (`id`)
                                                             ON DELETE CASCADE
                                                             ON UPDATE CASCADE)
    ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `nsu20`.`sport_facilities`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `nsu20`.`sport_facilities` (
                                                          `id` INT NOT NULL,
                                                          PRIMARY KEY (`id`))
    ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `nsu20`.`location`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `nsu20`.`location` (
                                                  `competition_id` INT NOT NULL,
                                                  `sport_facilities_id` INT NOT NULL,
                                                  PRIMARY KEY (`competition_id`, `sport_facilities_id`),
                                                  INDEX `fk_location_sports_facility1_idx` (`sport_facilities_id` ASC) ,
                                                  CONSTRAINT `fk_location_competition1`
                                                      FOREIGN KEY (`competition_id`)
                                                          REFERENCES `nsu20`.`competition` (`id`)
                                                          ON DELETE CASCADE
                                                          ON UPDATE CASCADE,
                                                  CONSTRAINT `fk_location_sports_facility1`
                                                      FOREIGN KEY (`sport_facilities_id`)
                                                          REFERENCES `nsu20`.`sport_facilities` (`id`)
                                                          ON DELETE CASCADE
                                                          ON UPDATE CASCADE)
    ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `nsu20`.`stadium`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `nsu20`.`stadium` (
                                                 `id` INT NOT NULL,
                                                 `capacity` INT NOT NULL,
                                                 PRIMARY KEY (`id`),
                                                 CONSTRAINT `fk_stadium_sports_facility1`
                                                     FOREIGN KEY (`id`)
                                                         REFERENCES `nsu20`.`sport_facilities` (`id`)
                                                         ON DELETE CASCADE
                                                         ON UPDATE CASCADE)
    ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `nsu20`.`court`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `nsu20`.`court` (
                                               `id` INT NOT NULL,
                                               `coverage_type` ENUM('grass', 'clay') NOT NULL,
                                               PRIMARY KEY (`id`),
                                               CONSTRAINT `fk_court_sports_facility1`
                                                   FOREIGN KEY (`id`)
                                                       REFERENCES `nsu20`.`sport_facilities` (`id`)
                                                       ON DELETE CASCADE
                                                       ON UPDATE CASCADE)
    ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `nsu20`.`mentoring`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `nsu20`.`mentoring` (
                                                   `sportsman_id` INT NOT NULL,
                                                   `coach_id` INT NOT NULL,
                                                   PRIMARY KEY (`sportsman_id`, `coach_id`),
                                                   INDEX `fk_mentoring_coach1_idx` (`coach_id` ASC) ,
                                                   CONSTRAINT `fk_mentoring_sportsman1`
                                                       FOREIGN KEY (`sportsman_id`)
                                                           REFERENCES `nsu20`.`sportsman` (`id`)
                                                           ON DELETE CASCADE
                                                           ON UPDATE CASCADE,
                                                   CONSTRAINT `fk_mentoring_coach1`
                                                       FOREIGN KEY (`coach_id`)
                                                           REFERENCES `nsu20`.`coach` (`id`)
                                                           ON DELETE CASCADE
                                                           ON UPDATE CASCADE)
    ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `nsu20`.`ice_arena`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `nsu20`.`ice_arena` (
                                                   `id` INT NOT NULL,
                                                   `square` DOUBLE NOT NULL,
                                                   PRIMARY KEY (`id`),
                                                   CONSTRAINT `fk_ice_arena_sports_facility1`
                                                       FOREIGN KEY (`id`)
                                                           REFERENCES `nsu20`.`sport_facilities` (`id`)
                                                           ON DELETE CASCADE
                                                           ON UPDATE CASCADE)
    ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `nsu20`.`volleyball_arena`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `nsu20`.`volleyball_arena` (
                                                          `id` INT NOT NULL,
                                                          `net_height` DOUBLE NOT NULL,
                                                          `net_width` DOUBLE NOT NULL,
                                                          PRIMARY KEY (`id`),
                                                          CONSTRAINT `fk_volleyball_arena_sports_facility1`
                                                              FOREIGN KEY (`id`)
                                                                  REFERENCES `nsu20`.`sport_facilities` (`id`)
                                                                  ON DELETE CASCADE
                                                                  ON UPDATE CASCADE)
    ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `nsu20`.`abilities`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `nsu20`.`abilities` (
                                                   `id` INT NOT NULL AUTO_INCREMENT,
                                                   `sportsman_id` INT NOT NULL,
                                                   `category` INT NOT NULL,
                                                   `sport` ENUM('football', 'tennis', 'hockey', 'volleyball', 'figureSkating', 'athletics') NOT NULL,
                                                   PRIMARY KEY (`id`),
                                                   UNIQUE KEY (`sportsman_id`, `category`, `sport`),
                                                   INDEX `fk_abilities_sportsman1_idx` (`sportsman_id` ASC) ,
                                                   CONSTRAINT `fk_abilities_sportsman1`
                                                       FOREIGN KEY (`sportsman_id`)
                                                           REFERENCES `nsu20`.`sportsman` (`id`)
                                                           ON DELETE CASCADE
                                                           ON UPDATE CASCADE)
    ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `nsu20`.`prizewinner`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `nsu20`.`prizewinner` (
                                                     `sportsman_id` INT NOT NULL,
                                                     `competition_id` INT NOT NULL,
                                                     PRIMARY KEY (`sportsman_id`, `competition_id`),
                                                     INDEX `fk_sportsman_has_competition_competition1_idx` (`competition_id` ASC) ,
                                                     INDEX `fk_sportsman_has_competition_sportsman1_idx` (`sportsman_id` ASC) ,
                                                     CONSTRAINT `fk_sportsman_has_competition_sportsman1`
                                                         FOREIGN KEY (`sportsman_id`)
                                                             REFERENCES `nsu20`.`sportsman` (`id`)
                                                             ON DELETE CASCADE
                                                             ON UPDATE CASCADE,
                                                     CONSTRAINT `fk_sportsman_has_competition_competition1`
                                                         FOREIGN KEY (`competition_id`)
                                                             REFERENCES `nsu20`.`competition` (`id`)
                                                             ON DELETE CASCADE
                                                             ON UPDATE CASCADE)
    ENGINE = InnoDB;

/*если тренер поменял вид спорта, то все связи с его подопечными удаляются*/
DELIMITER $$
create trigger coachSportUpdate
    after update on coach
    for each row
begin
    if ( NEW.sport != OLD.sport ) then
        delete from mentoring where (coach_id = OLD.id);
    end if;
end $$
DELIMITER ;
/*при добавлении нового спортсмена(при добавлении должен быть указан клуб) в указанном клубе прибавляется один участник*/
DELIMITER $$
create trigger memberCalculationInserting
    after insert on sportsman
    for each row
begin
    update club cl
    set cl.amount_of_members = cl.amount_of_members + 1
    where cl.id = NEW.club_id;
end $$
DELIMITER ;

/*при изменение клуба спортсмена, количество участников у прежнего клуба уменьшается на одного, а у нового увеличивается на одного*/
DELIMITER $$
create trigger memberCalculationUpdate
    after update on `nsu20`.`sportsman`
    for each row
begin
    if (NEW.club_id != OLD.club_id) then
        update club cl
        set cl.amount_of_members = cl.amount_of_members + 1
        where cl.id = NEW.club_id;
        update club cl
        set cl.amount_of_members = cl.amount_of_members - 1
        where cl.id = OLD.club_id;
    end if;
end $$
DELIMITER ;

DELIMITER $$
create trigger memberCalculationDelete
    after delete on `nsu20`.`sportsman`
    for each row
begin
    update club cl
    set cl.amount_of_members = cl.amount_of_members - 1
    where cl.id = OLD.club_id;
end $$
DELIMITER ;

/*при удалении способности спортсмена удаляется связь с тренерами, которые тренеровали его виду спорта, который был в удаленной способности.
  также при удалении способности спортсмена будут удаляться связи в таблице participation, то есть участие в соревнованиях по виду спорта, который был в удаленной
  способности, причем связи с теми соревнованиями, которые будут проходить в будущем или проходят в данный момент (отсчёт от момента удаления curdate() )
  */
DELIMITER $$
create trigger abilityDeletion
    after delete on nsu20.abilities
    for each row
begin
    delete from mentoring where (
                                        coach_id in
                                        (
                                            select coach_id from (select * from mentoring) as m inner join coach co on co.id = m.coach_id where
                                                (m.sportsman_id = OLD.sportsman_id and co.sport = OLD.sport)
                                        )
                                    );
    delete from participation where (
                                            competition_id in
                                            (
                                                select competition_id from (select * from participation) as p inner join competition c on c.id = p.competition_id where
                                                    (
                                                                p.sportsman_id = OLD.sportsman_id and
                                                                c.sport = OLD.sport and
                                                                (
                                                                            c.beginning_date >= curdate() or
                                                                            (c.beginning_date <= curdate() and curdate() <= c.finish_date)
                                                                    )
                                                        )
                                            )
                                        );
end $$
DELIMITER ;

/*считает число спортсменов клуба, участвовавших в соревнованиях в указанный период*/
DELIMITER $$
create procedure countNumberOfSportsmenDuringPeriod(clubId integer, minDate date, maxDate date)
begin
    select count(distinct s.id) from sportsman s
                                         inner join club cl on cl.id = s.club_id
                                         inner join participation p on p.sportsman_id = s.id
                                         inner join competition co on co.id = p.competition_id
    where
            cl.id = clubId and
        (
                (minDate is null and maxDate is null) or
                (
                        (minDate <= maxDate) and
                        (
                                (co.finish_date >= minDate and co.finish_date <= maxDate) or
                                (co.beginning_date >= minDate and co.beginning_date <= maxDate) or
                                (co.beginning_date <= minDate and co.finish_date >= maxDate)
                            )
                    )
            );
end $$
DELIMITER ;

/*если добавляем соревнование с датой начала позже, чем дата конца, то получаем сообщение об ошибке*/
DELIMITER $$
create trigger competitionInsertion after insert on competition for each row
begin
    if (NEW.beginning_date > NEW.finish_date) then
        begin
            signal sqlstate '45000' set message_text = "beginning date is after finish date";
        end;
    end if;
end $$
DELIMITER ;

/*если изменяем у соревнования дату начала так, что она становится позже даты конца, то получаем сообщение об ошибке*/
DELIMITER $$
create trigger competitionUpdate after update on competition for each row
begin
    if (NEW.beginning_date > NEW.finish_date) then
        begin
            signal sqlstate '45000' set message_text = "beginning date is after finish date";
        end;
    end if;
end $$
DELIMITER ;

/*если попытаться добавить призера в соревнование, которое еще не началось, то получаем сообщение об ошибке*/
/*если попытаться добавить в призеры соревнования спортсмена, который в нем не учавствовал, то получаем сообщение об ошибке*/
DELIMITER $$
create trigger prizeWinnerInsertion after insert on prizewinner for each row
begin

    if ( select count(distinct c.id) from competition c
         where (c.id = new.competition_id) and (c.beginning_date > curdate()) ) then
        signal sqlstate '45000' set message_text = "competition has not began yet, you can't assign a prize winner";
    end if;

    if (
            (select count(distinct p.sportsman_id) from participation p
             where (p.sportsman_id = new.sportsman_id and p.competition_id = new.competition_id)
            ) = 0
        ) then signal sqlstate '45000' set message_text = "The sportsman has not participated in the competition";
    end if;

end $$
DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;